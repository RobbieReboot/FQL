//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\projects\Chevin\Sandbox\FQL\FQL.Parser\FQLLexer.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace FQL.Parser {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public partial class FQLLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		BEGIN=1, END=2, READ=3, WRITE=4, PRINT=5, CONNECTION=6, VAR=7, OPEN_BRACE=8, 
		CLOSE_BRACE=9, INTERPOLATED_STRING_START=10, STRING_END=11, INTERPOLATION_START=12, 
		STRING_CONTENT=13, INTERPOLATION_END=14, INTERPOLATION_ID=15, OPEN_BRACKET=16, 
		CLOSE_BRACKET=17, OPEN_PARENS=18, CLOSE_PARENS=19, DOT=20, COMMA=21, COLON=22, 
		SEMICOLON=23, PLUS=24, MINUS=25, STAR=26, DIV=27, PERCENT=28, AMP=29, 
		BITWISE_OR=30, CARET=31, BANG=32, TILDE=33, ASSIGNMENT=34, LT=35, GT=36, 
		INTERR=37, DOUBLE_COLON=38, OP_COALESCING=39, OP_INC=40, OP_DEC=41, OP_AND=42, 
		OP_OR=43, OP_PTR=44, OP_EQ=45, OP_NE=46, OP_LE=47, OP_GE=48, OP_ADD_ASSIGNMENT=49, 
		OP_SUB_ASSIGNMENT=50, OP_MULT_ASSIGNMENT=51, OP_DIV_ASSIGNMENT=52, OP_MOD_ASSIGNMENT=53, 
		OP_AND_ASSIGNMENT=54, OP_OR_ASSIGNMENT=55, OP_XOR_ASSIGNMENT=56, OP_LEFT_SHIFT=57, 
		OP_LEFT_SHIFT_ASSIGNMENT=58, OP_COALESCING_ASSIGNMENT=59, OP_RANGE=60, 
		STRING=61, ID=62, NUMBER=63, SINGLE_LINE_COMMENT=64, MULTI_LINE_COMMENT=65, 
		WS=66;
	public const int
		COMMENTS_CHANNEL=2, DIRECTIVE=3;
	public const int
		INTERPOLATED_STRING_MODE=1, INTERPOLATION_MODE=2;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "COMMENTS_CHANNEL", "DIRECTIVE"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "INTERPOLATED_STRING_MODE", "INTERPOLATION_MODE"
	};

	public static readonly string[] ruleNames = {
		"BEGIN", "END", "READ", "WRITE", "PRINT", "CONNECTION", "VAR", "OPEN_BRACE", 
		"CLOSE_BRACE", "INTERPOLATED_STRING_START", "STRING_END", "INTERPOLATION_START", 
		"STRING_CONTENT", "INTERPOLATION_END", "INTERPOLATION_ID", "OPEN_BRACKET", 
		"CLOSE_BRACKET", "OPEN_PARENS", "CLOSE_PARENS", "DOT", "COMMA", "COLON", 
		"SEMICOLON", "PLUS", "MINUS", "STAR", "DIV", "PERCENT", "AMP", "BITWISE_OR", 
		"CARET", "BANG", "TILDE", "ASSIGNMENT", "LT", "GT", "INTERR", "DOUBLE_COLON", 
		"OP_COALESCING", "OP_INC", "OP_DEC", "OP_AND", "OP_OR", "OP_PTR", "OP_EQ", 
		"OP_NE", "OP_LE", "OP_GE", "OP_ADD_ASSIGNMENT", "OP_SUB_ASSIGNMENT", "OP_MULT_ASSIGNMENT", 
		"OP_DIV_ASSIGNMENT", "OP_MOD_ASSIGNMENT", "OP_AND_ASSIGNMENT", "OP_OR_ASSIGNMENT", 
		"OP_XOR_ASSIGNMENT", "OP_LEFT_SHIFT", "OP_LEFT_SHIFT_ASSIGNMENT", "OP_COALESCING_ASSIGNMENT", 
		"OP_RANGE", "STRING", "ID", "NUMBER", "SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT", 
		"WS"
	};


	public FQLLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public FQLLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'begin'", "'end'", "'read'", "'write'", "'print'", "'connection'", 
		"'var'", null, null, "'$\"'", "'\"'", null, null, null, null, "'['", "']'", 
		"'('", "')'", "'.'", "','", "':'", "';'", "'+'", "'-'", "'*'", "'/'", 
		"'%'", "'&'", "'|'", "'^'", "'!'", "'~'", "'='", "'<'", "'>'", "'?'", 
		"'::'", "'??'", "'++'", "'--'", "'&&'", "'||'", "'->'", "'=='", "'!='", 
		"'<='", "'>='", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='", 
		"'^='", "'<<'", "'<<='", "'??='", "'..'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "BEGIN", "END", "READ", "WRITE", "PRINT", "CONNECTION", "VAR", "OPEN_BRACE", 
		"CLOSE_BRACE", "INTERPOLATED_STRING_START", "STRING_END", "INTERPOLATION_START", 
		"STRING_CONTENT", "INTERPOLATION_END", "INTERPOLATION_ID", "OPEN_BRACKET", 
		"CLOSE_BRACKET", "OPEN_PARENS", "CLOSE_PARENS", "DOT", "COMMA", "COLON", 
		"SEMICOLON", "PLUS", "MINUS", "STAR", "DIV", "PERCENT", "AMP", "BITWISE_OR", 
		"CARET", "BANG", "TILDE", "ASSIGNMENT", "LT", "GT", "INTERR", "DOUBLE_COLON", 
		"OP_COALESCING", "OP_INC", "OP_DEC", "OP_AND", "OP_OR", "OP_PTR", "OP_EQ", 
		"OP_NE", "OP_LE", "OP_GE", "OP_ADD_ASSIGNMENT", "OP_SUB_ASSIGNMENT", "OP_MULT_ASSIGNMENT", 
		"OP_DIV_ASSIGNMENT", "OP_MOD_ASSIGNMENT", "OP_AND_ASSIGNMENT", "OP_OR_ASSIGNMENT", 
		"OP_XOR_ASSIGNMENT", "OP_LEFT_SHIFT", "OP_LEFT_SHIFT_ASSIGNMENT", "OP_COALESCING_ASSIGNMENT", 
		"OP_RANGE", "STRING", "ID", "NUMBER", "SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT", 
		"WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "FQLLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static FQLLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,66,375,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,
		7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
		7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,
		7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,
		7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
		7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,
		7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,
		7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,
		7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,
		7,62,2,63,7,63,2,64,7,64,2,65,7,65,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,
		1,1,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,
		4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,
		1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,
		12,4,12,196,8,12,11,12,12,12,197,1,13,1,13,1,13,1,13,1,14,1,14,5,14,206,
		8,14,10,14,12,14,209,9,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,
		1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,
		1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,
		1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,39,
		1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,
		1,44,1,44,1,44,1,45,1,45,1,45,1,46,1,46,1,46,1,47,1,47,1,47,1,48,1,48,
		1,48,1,49,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,52,1,53,
		1,53,1,53,1,54,1,54,1,54,1,55,1,55,1,55,1,56,1,56,1,56,1,57,1,57,1,57,
		1,57,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,60,1,60,5,60,328,8,60,10,60,
		12,60,331,9,60,1,60,1,60,1,61,1,61,5,61,337,8,61,10,61,12,61,340,9,61,
		1,62,4,62,343,8,62,11,62,12,62,344,1,63,1,63,1,63,1,63,5,63,351,8,63,10,
		63,12,63,354,9,63,1,63,1,63,1,64,1,64,1,64,1,64,5,64,362,8,64,10,64,12,
		64,365,9,64,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,1,65,1,363,0,66,3,
		1,5,2,7,3,9,4,11,5,13,6,15,7,17,8,19,9,21,10,23,11,25,12,27,13,29,14,31,
		15,33,16,35,17,37,18,39,19,41,20,43,21,45,22,47,23,49,24,51,25,53,26,55,
		27,57,28,59,29,61,30,63,31,65,32,67,33,69,34,71,35,73,36,75,37,77,38,79,
		39,81,40,83,41,85,42,87,43,89,44,91,45,93,46,95,47,97,48,99,49,101,50,
		103,51,105,52,107,53,109,54,111,55,113,56,115,57,117,58,119,59,121,60,
		123,61,125,62,127,63,129,64,131,65,133,66,3,0,1,2,6,3,0,34,34,123,123,
		125,125,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,3,0,10,10,
		13,13,34,34,4,0,10,10,13,13,133,133,8232,8233,3,0,9,10,13,13,32,32,379,
		0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
		0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,33,1,0,0,0,0,
		35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,
		0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,
		0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
		1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,
		0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
		1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,
		0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,
		0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,
		0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,
		0,0,131,1,0,0,0,0,133,1,0,0,0,1,23,1,0,0,0,1,25,1,0,0,0,1,27,1,0,0,0,2,
		29,1,0,0,0,2,31,1,0,0,0,3,135,1,0,0,0,5,141,1,0,0,0,7,145,1,0,0,0,9,150,
		1,0,0,0,11,156,1,0,0,0,13,162,1,0,0,0,15,173,1,0,0,0,17,177,1,0,0,0,19,
		179,1,0,0,0,21,181,1,0,0,0,23,186,1,0,0,0,25,190,1,0,0,0,27,195,1,0,0,
		0,29,199,1,0,0,0,31,203,1,0,0,0,33,210,1,0,0,0,35,212,1,0,0,0,37,214,1,
		0,0,0,39,216,1,0,0,0,41,218,1,0,0,0,43,220,1,0,0,0,45,222,1,0,0,0,47,224,
		1,0,0,0,49,226,1,0,0,0,51,228,1,0,0,0,53,230,1,0,0,0,55,232,1,0,0,0,57,
		234,1,0,0,0,59,236,1,0,0,0,61,238,1,0,0,0,63,240,1,0,0,0,65,242,1,0,0,
		0,67,244,1,0,0,0,69,246,1,0,0,0,71,248,1,0,0,0,73,250,1,0,0,0,75,252,1,
		0,0,0,77,254,1,0,0,0,79,257,1,0,0,0,81,260,1,0,0,0,83,263,1,0,0,0,85,266,
		1,0,0,0,87,269,1,0,0,0,89,272,1,0,0,0,91,275,1,0,0,0,93,278,1,0,0,0,95,
		281,1,0,0,0,97,284,1,0,0,0,99,287,1,0,0,0,101,290,1,0,0,0,103,293,1,0,
		0,0,105,296,1,0,0,0,107,299,1,0,0,0,109,302,1,0,0,0,111,305,1,0,0,0,113,
		308,1,0,0,0,115,311,1,0,0,0,117,314,1,0,0,0,119,318,1,0,0,0,121,322,1,
		0,0,0,123,325,1,0,0,0,125,334,1,0,0,0,127,342,1,0,0,0,129,346,1,0,0,0,
		131,357,1,0,0,0,133,371,1,0,0,0,135,136,5,98,0,0,136,137,5,101,0,0,137,
		138,5,103,0,0,138,139,5,105,0,0,139,140,5,110,0,0,140,4,1,0,0,0,141,142,
		5,101,0,0,142,143,5,110,0,0,143,144,5,100,0,0,144,6,1,0,0,0,145,146,5,
		114,0,0,146,147,5,101,0,0,147,148,5,97,0,0,148,149,5,100,0,0,149,8,1,0,
		0,0,150,151,5,119,0,0,151,152,5,114,0,0,152,153,5,105,0,0,153,154,5,116,
		0,0,154,155,5,101,0,0,155,10,1,0,0,0,156,157,5,112,0,0,157,158,5,114,0,
		0,158,159,5,105,0,0,159,160,5,110,0,0,160,161,5,116,0,0,161,12,1,0,0,0,
		162,163,5,99,0,0,163,164,5,111,0,0,164,165,5,110,0,0,165,166,5,110,0,0,
		166,167,5,101,0,0,167,168,5,99,0,0,168,169,5,116,0,0,169,170,5,105,0,0,
		170,171,5,111,0,0,171,172,5,110,0,0,172,14,1,0,0,0,173,174,5,118,0,0,174,
		175,5,97,0,0,175,176,5,114,0,0,176,16,1,0,0,0,177,178,5,123,0,0,178,18,
		1,0,0,0,179,180,5,125,0,0,180,20,1,0,0,0,181,182,5,36,0,0,182,183,5,34,
		0,0,183,184,1,0,0,0,184,185,6,9,0,0,185,22,1,0,0,0,186,187,5,34,0,0,187,
		188,1,0,0,0,188,189,6,10,1,0,189,24,1,0,0,0,190,191,5,123,0,0,191,192,
		1,0,0,0,192,193,6,11,2,0,193,26,1,0,0,0,194,196,8,0,0,0,195,194,1,0,0,
		0,196,197,1,0,0,0,197,195,1,0,0,0,197,198,1,0,0,0,198,28,1,0,0,0,199,200,
		5,125,0,0,200,201,1,0,0,0,201,202,6,13,1,0,202,30,1,0,0,0,203,207,7,1,
		0,0,204,206,7,2,0,0,205,204,1,0,0,0,206,209,1,0,0,0,207,205,1,0,0,0,207,
		208,1,0,0,0,208,32,1,0,0,0,209,207,1,0,0,0,210,211,5,91,0,0,211,34,1,0,
		0,0,212,213,5,93,0,0,213,36,1,0,0,0,214,215,5,40,0,0,215,38,1,0,0,0,216,
		217,5,41,0,0,217,40,1,0,0,0,218,219,5,46,0,0,219,42,1,0,0,0,220,221,5,
		44,0,0,221,44,1,0,0,0,222,223,5,58,0,0,223,46,1,0,0,0,224,225,5,59,0,0,
		225,48,1,0,0,0,226,227,5,43,0,0,227,50,1,0,0,0,228,229,5,45,0,0,229,52,
		1,0,0,0,230,231,5,42,0,0,231,54,1,0,0,0,232,233,5,47,0,0,233,56,1,0,0,
		0,234,235,5,37,0,0,235,58,1,0,0,0,236,237,5,38,0,0,237,60,1,0,0,0,238,
		239,5,124,0,0,239,62,1,0,0,0,240,241,5,94,0,0,241,64,1,0,0,0,242,243,5,
		33,0,0,243,66,1,0,0,0,244,245,5,126,0,0,245,68,1,0,0,0,246,247,5,61,0,
		0,247,70,1,0,0,0,248,249,5,60,0,0,249,72,1,0,0,0,250,251,5,62,0,0,251,
		74,1,0,0,0,252,253,5,63,0,0,253,76,1,0,0,0,254,255,5,58,0,0,255,256,5,
		58,0,0,256,78,1,0,0,0,257,258,5,63,0,0,258,259,5,63,0,0,259,80,1,0,0,0,
		260,261,5,43,0,0,261,262,5,43,0,0,262,82,1,0,0,0,263,264,5,45,0,0,264,
		265,5,45,0,0,265,84,1,0,0,0,266,267,5,38,0,0,267,268,5,38,0,0,268,86,1,
		0,0,0,269,270,5,124,0,0,270,271,5,124,0,0,271,88,1,0,0,0,272,273,5,45,
		0,0,273,274,5,62,0,0,274,90,1,0,0,0,275,276,5,61,0,0,276,277,5,61,0,0,
		277,92,1,0,0,0,278,279,5,33,0,0,279,280,5,61,0,0,280,94,1,0,0,0,281,282,
		5,60,0,0,282,283,5,61,0,0,283,96,1,0,0,0,284,285,5,62,0,0,285,286,5,61,
		0,0,286,98,1,0,0,0,287,288,5,43,0,0,288,289,5,61,0,0,289,100,1,0,0,0,290,
		291,5,45,0,0,291,292,5,61,0,0,292,102,1,0,0,0,293,294,5,42,0,0,294,295,
		5,61,0,0,295,104,1,0,0,0,296,297,5,47,0,0,297,298,5,61,0,0,298,106,1,0,
		0,0,299,300,5,37,0,0,300,301,5,61,0,0,301,108,1,0,0,0,302,303,5,38,0,0,
		303,304,5,61,0,0,304,110,1,0,0,0,305,306,5,124,0,0,306,307,5,61,0,0,307,
		112,1,0,0,0,308,309,5,94,0,0,309,310,5,61,0,0,310,114,1,0,0,0,311,312,
		5,60,0,0,312,313,5,60,0,0,313,116,1,0,0,0,314,315,5,60,0,0,315,316,5,60,
		0,0,316,317,5,61,0,0,317,118,1,0,0,0,318,319,5,63,0,0,319,320,5,63,0,0,
		320,321,5,61,0,0,321,120,1,0,0,0,322,323,5,46,0,0,323,324,5,46,0,0,324,
		122,1,0,0,0,325,329,5,34,0,0,326,328,8,3,0,0,327,326,1,0,0,0,328,331,1,
		0,0,0,329,327,1,0,0,0,329,330,1,0,0,0,330,332,1,0,0,0,331,329,1,0,0,0,
		332,333,5,34,0,0,333,124,1,0,0,0,334,338,7,1,0,0,335,337,7,2,0,0,336,335,
		1,0,0,0,337,340,1,0,0,0,338,336,1,0,0,0,338,339,1,0,0,0,339,126,1,0,0,
		0,340,338,1,0,0,0,341,343,2,48,57,0,342,341,1,0,0,0,343,344,1,0,0,0,344,
		342,1,0,0,0,344,345,1,0,0,0,345,128,1,0,0,0,346,347,5,47,0,0,347,348,5,
		47,0,0,348,352,1,0,0,0,349,351,8,4,0,0,350,349,1,0,0,0,351,354,1,0,0,0,
		352,350,1,0,0,0,352,353,1,0,0,0,353,355,1,0,0,0,354,352,1,0,0,0,355,356,
		6,63,3,0,356,130,1,0,0,0,357,358,5,47,0,0,358,359,5,42,0,0,359,363,1,0,
		0,0,360,362,9,0,0,0,361,360,1,0,0,0,362,365,1,0,0,0,363,364,1,0,0,0,363,
		361,1,0,0,0,364,366,1,0,0,0,365,363,1,0,0,0,366,367,5,42,0,0,367,368,5,
		47,0,0,368,369,1,0,0,0,369,370,6,64,3,0,370,132,1,0,0,0,371,372,7,5,0,
		0,372,373,1,0,0,0,373,374,6,65,4,0,374,134,1,0,0,0,10,0,1,2,197,207,329,
		338,344,352,363,5,5,1,0,4,0,0,5,2,0,0,2,0,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace FQL.Parser
