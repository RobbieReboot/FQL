//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\projects\Chevin\Sandbox\FQL\FQL.Parser\FQLParser.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace FQL.Parser {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="FQLParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public interface IFQLParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] FQLParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatements([NotNull] FQLParser.StatementsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] FQLParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.printStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintStatement([NotNull] FQLParser.PrintStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>printString</c>
	/// labeled alternative in <see cref="FQLParser.printParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintString([NotNull] FQLParser.PrintStringContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>printIdentifier</c>
	/// labeled alternative in <see cref="FQLParser.printParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintIdentifier([NotNull] FQLParser.PrintIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] FQLParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.readStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReadStatement([NotNull] FQLParser.ReadStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.writeStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWriteStatement([NotNull] FQLParser.WriteStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.connectionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConnectionStatement([NotNull] FQLParser.ConnectionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf([NotNull] FQLParser.IfContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn([NotNull] FQLParser.ReturnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.returnParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnParams([NotNull] FQLParser.ReturnParamsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierList([NotNull] FQLParser.IdentifierListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionList([NotNull] FQLParser.ExpressionListContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AdditiveExpr</c>
	/// labeled alternative in <see cref="FQLParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpr([NotNull] FQLParser.AdditiveExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MultiplicativeExpr</c>
	/// labeled alternative in <see cref="FQLParser.mulDivExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpr([NotNull] FQLParser.MultiplicativeExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExponentationExpr</c>
	/// labeled alternative in <see cref="FQLParser.powExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExponentationExpr([NotNull] FQLParser.ExponentationExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BoolFactor</c>
	/// labeled alternative in <see cref="FQLParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolFactor([NotNull] FQLParser.BoolFactorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IntFactor</c>
	/// labeled alternative in <see cref="FQLParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntFactor([NotNull] FQLParser.IntFactorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FloatFactor</c>
	/// labeled alternative in <see cref="FQLParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloatFactor([NotNull] FQLParser.FloatFactorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="FQLParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenExpr([NotNull] FQLParser.ParenExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IdentifierFactor</c>
	/// labeled alternative in <see cref="FQLParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierFactor([NotNull] FQLParser.IdentifierFactorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.boolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolean([NotNull] FQLParser.BooleanContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInteger([NotNull] FQLParser.IntegerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator([NotNull] FQLParser.OperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] FQLParser.IdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>InterpolationString</c>
	/// labeled alternative in <see cref="FQLParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterpolationString([NotNull] FQLParser.InterpolationStringContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StrLiteral</c>
	/// labeled alternative in <see cref="FQLParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStrLiteral([NotNull] FQLParser.StrLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.stringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringLiteral([NotNull] FQLParser.StringLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.interpolatedString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterpolatedString([NotNull] FQLParser.InterpolatedStringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FQLParser.interpolation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterpolation([NotNull] FQLParser.InterpolationContext context);
}
} // namespace FQL.Parser
